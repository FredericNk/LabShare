name: "Production"
on:
  push:
    branches:
      - master
    paths:
      - 'labshare-client/**'
      - '.github/**'
  

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
      - run: cd labshare-client && npm install
      - run: cd labshare-client && npm run build


  docker:
    name: "Prepare Docker"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - 
        name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: true
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: "Build and Push Docker Image"
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: labhive/labhive:production
          context: ./labshare-client

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: "Deploy"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd LabHive/labshare-client;
            git reset --hard;
            git pull;
            git submodule update --init;

            docker volume create labhive_secret_production;
            docker run --rm -v $(pwd):/src -v labhive_secret_production:/dst busybox cp -r /src/secret/. /dst/;

            if ! docker service ls | grep -q LabHiveProduction; then
              docker stack deploy -c docker-compose.production.yml -c docker-compose.production.override.yml LabHiveProduction
              until [[ ! -z $(docker stack ps LabHiveProduction -q) ]]; do sleep 1; done
            else
              docker service update --image labhive/labhive:production LabHiveProduction_app
            fi

            if ! docker run --rm -v $(pwd):/app -w /app --network LabHiveProduction_network -e "PRODUCTION=1" node /bin/bash -c "npm i && npm run migrations up"; then
              echo "Database migration failed!!"
              exit 1;
            fi

  notify:
    name: "Notify"
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Notify Discord
        run: |
          curl -X "POST" "${{ secrets.DISCORD_WEBHOOK_RELEASE }}" \
            -H 'Content-Type: application/json' \
            -d $'{
          "username": "BizzyB",
          "embeds": [
            {
              "author": {
                "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                "name": "GitHub"
              },
              "title": "New release deployed!",
              "description": "Changelog: ${{ github.event.compare }}\\nAvailable at: https://labhive.de",
              "url": "${{ github.event.compare }}"
            }
          ]
          }'
